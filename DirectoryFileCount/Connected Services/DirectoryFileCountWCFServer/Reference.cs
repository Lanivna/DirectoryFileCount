//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DirectoryFileCount.DirectoryFileCountWCFServer {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DirectoryFileCountWCFServer.IDirectoryFileCountSimulator")]
    public interface IDirectoryFileCountSimulator {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDirectoryFileCountSimulator/GetAllUsers", ReplyAction="http://tempuri.org/IDirectoryFileCountSimulator/GetAllUsersResponse")]
        DirectoryFileCount.DBModels.User[] GetAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDirectoryFileCountSimulator/GetAllUsers", ReplyAction="http://tempuri.org/IDirectoryFileCountSimulator/GetAllUsersResponse")]
        System.Threading.Tasks.Task<DirectoryFileCount.DBModels.User[]> GetAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDirectoryFileCountSimulator/AddUser", ReplyAction="http://tempuri.org/IDirectoryFileCountSimulator/AddUserResponse")]
        void AddUser(DirectoryFileCount.DBModels.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDirectoryFileCountSimulator/AddUser", ReplyAction="http://tempuri.org/IDirectoryFileCountSimulator/AddUserResponse")]
        System.Threading.Tasks.Task AddUserAsync(DirectoryFileCount.DBModels.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDirectoryFileCountSimulator/UserExists", ReplyAction="http://tempuri.org/IDirectoryFileCountSimulator/UserExistsResponse")]
        bool UserExists(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDirectoryFileCountSimulator/UserExists", ReplyAction="http://tempuri.org/IDirectoryFileCountSimulator/UserExistsResponse")]
        System.Threading.Tasks.Task<bool> UserExistsAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDirectoryFileCountSimulator/GetUserByEmail", ReplyAction="http://tempuri.org/IDirectoryFileCountSimulator/GetUserByEmailResponse")]
        DirectoryFileCount.DBModels.User GetUserByEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDirectoryFileCountSimulator/GetUserByEmail", ReplyAction="http://tempuri.org/IDirectoryFileCountSimulator/GetUserByEmailResponse")]
        System.Threading.Tasks.Task<DirectoryFileCount.DBModels.User> GetUserByEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDirectoryFileCountSimulator/GetUserByGuid", ReplyAction="http://tempuri.org/IDirectoryFileCountSimulator/GetUserByGuidResponse")]
        DirectoryFileCount.DBModels.User GetUserByGuid(System.Guid guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDirectoryFileCountSimulator/GetUserByGuid", ReplyAction="http://tempuri.org/IDirectoryFileCountSimulator/GetUserByGuidResponse")]
        System.Threading.Tasks.Task<DirectoryFileCount.DBModels.User> GetUserByGuidAsync(System.Guid guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDirectoryFileCountSimulator/AddRequest", ReplyAction="http://tempuri.org/IDirectoryFileCountSimulator/AddRequestResponse")]
        void AddRequest(DirectoryFileCount.DBModels.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDirectoryFileCountSimulator/AddRequest", ReplyAction="http://tempuri.org/IDirectoryFileCountSimulator/AddRequestResponse")]
        System.Threading.Tasks.Task AddRequestAsync(DirectoryFileCount.DBModels.Request request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDirectoryFileCountSimulatorChannel : DirectoryFileCount.DirectoryFileCountWCFServer.IDirectoryFileCountSimulator, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DirectoryFileCountSimulatorClient : System.ServiceModel.ClientBase<DirectoryFileCount.DirectoryFileCountWCFServer.IDirectoryFileCountSimulator>, DirectoryFileCount.DirectoryFileCountWCFServer.IDirectoryFileCountSimulator {
        
        public DirectoryFileCountSimulatorClient() {
        }
        
        public DirectoryFileCountSimulatorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DirectoryFileCountSimulatorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DirectoryFileCountSimulatorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DirectoryFileCountSimulatorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public DirectoryFileCount.DBModels.User[] GetAllUsers() {
            return base.Channel.GetAllUsers();
        }
        
        public System.Threading.Tasks.Task<DirectoryFileCount.DBModels.User[]> GetAllUsersAsync() {
            return base.Channel.GetAllUsersAsync();
        }
        
        public void AddUser(DirectoryFileCount.DBModels.User user) {
            base.Channel.AddUser(user);
        }
        
        public System.Threading.Tasks.Task AddUserAsync(DirectoryFileCount.DBModels.User user) {
            return base.Channel.AddUserAsync(user);
        }
        
        public bool UserExists(string email) {
            return base.Channel.UserExists(email);
        }
        
        public System.Threading.Tasks.Task<bool> UserExistsAsync(string email) {
            return base.Channel.UserExistsAsync(email);
        }
        
        public DirectoryFileCount.DBModels.User GetUserByEmail(string email) {
            return base.Channel.GetUserByEmail(email);
        }
        
        public System.Threading.Tasks.Task<DirectoryFileCount.DBModels.User> GetUserByEmailAsync(string email) {
            return base.Channel.GetUserByEmailAsync(email);
        }
        
        public DirectoryFileCount.DBModels.User GetUserByGuid(System.Guid guid) {
            return base.Channel.GetUserByGuid(guid);
        }
        
        public System.Threading.Tasks.Task<DirectoryFileCount.DBModels.User> GetUserByGuidAsync(System.Guid guid) {
            return base.Channel.GetUserByGuidAsync(guid);
        }
        
        public void AddRequest(DirectoryFileCount.DBModels.Request request) {
            base.Channel.AddRequest(request);
        }
        
        public System.Threading.Tasks.Task AddRequestAsync(DirectoryFileCount.DBModels.Request request) {
            return base.Channel.AddRequestAsync(request);
        }
    }
}
